{
  description = "openxr with monado for nixos";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable-small";
    pre-commit-hooks.url = "github:cachix/pre-commit-hooks.nix";
    pre-commit-hooks.inputs.flake-utils.follows = "flake-utils";
    pre-commit-hooks.inputs.nixpkgs.follows = "nixpkgs";
    flake-utils.url = "github:numtide/flake-utils";
    minimal-shell.url = "github:LunNova/nix-minimal-shell";
  };

  # SCHEMA:
  # perSystem                 = function which takes system as input and generates system specific outputs for that system
  #                             (system: { packages, legacyPackages, homeConfigurations, checks, slowChecks })
  # packages.system           = attrset with packages marked as able to eval/build, generated by perSystem
  # legacyPackages.system     = attrset with packages including unsupported/marked broken, generated by perSystem
  # checks.system             = attrset with checks, generated by perSystem
  # devShells.system          = attrset with dev shells, generated by perSystem
  outputs = flakeArgs:
    let
      perSystem = import ./per-system.nix { inherit flakeArgs; };
    in
    {
      inherit perSystem;
    } // flakeArgs.flake-utils.lib.eachDefaultSystem perSystem;
}
